version: "3.8"
services:
  db:
    image: postgres
    restart: unless-stopped
    expose:
      - "5432"
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data


  tlbc:
    image: trustlines/tlbc-node:release
    container_name: tlbc
    restart: always
    stop_grace_period: 3m
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    networks:
      - backend
    expose:
      - "8545"
    ports:
      - 8545:8545
      - 8545:8545/udp
      - 30300:30300
      - 30300:30300/udp
    volumes:
      - tlbc-data:/data
      - tlbc-config:/config
      - tlbc-network:/config/network
      - tlbc-shared:/shared
      - ./keystore.json:/home/openethereum/.local/share/openethereum/custom/keys/tlbc/keystore.json
      - ./pass.pwd:/home/openethereum/.local/share/openethereum/custom/keys/pass.pwd
      - ./node-config.toml:/config/node-config.toml
    command: >-
      --role observer
      -c
      --config /config/node-config.toml
      --no-warp
      --jsonrpc-cors=all
      --jsonrpc-apis=all
      --jsonrpc-hosts=all
      --jsonrpc-threads=10
      --jsonrpc-server-threads=10
      --jsonrpc-interface=all
      --no-ipc
      --no-secretstore

  relay:
    image: trustlines/relay
    depends_on:
      - "db"
      - "tlbc"
    volumes:
      - ./config.toml:/opt/relay/config.toml
      - ./addresses.json:/opt/relay/addresses.json

    # make relay server listen on port 5000. In a real scenario you will want to
    # put a proxy like nginx, apache or traefik in front of the relay server
    ports:
      - "5000:5000"
    environment:
      - PGHOST
      - PGUSER
      - PGDATABASE
      - PGPASSWORD
    networks:
      - backend
    restart: unless-stopped

  index:
    image: trustlines/py-eth-index
    depends_on:
      - "db"
      - "tlbc"
    environment:
      - PGHOST
      - PGUSER
      - PGDATABASE
      - PGPASSWORD
    networks:
      - backend
    restart: unless-stopped
    command: ["runsync", "--jsonrpc", "http://tlbc:8545"]
    volumes:
      - ./addresses.json:/opt/ethindex/addresses.json


volumes:
  blockchain-data:
  enode-dir:
  postgres-data:
  tlbc-data:
  tlbc-config:
  tlbc-network:
  tlbc-shared:
networks:
  backend:
